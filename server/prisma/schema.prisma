// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int       @id @default(autoincrement())
  username String    @unique @db.VarChar(255)
  email    String    @unique @db.VarChar(255)
  password String    @db.VarChar(255)
  blogs    Blog[]
  comments Comment[]
  like     Like[]
}

model Blog {
  id        Int       @id @default(autoincrement())
  title     String    @db.VarChar(255)
  createdAt DateTime  @default(now()) @db.Timestamp(6)
  content   String
  imgUrl    String?
  comments  Comment[]
  like      Like[]
  author    User      @relation(fields: [authorId], references: [id])
  authorId  Int
}

model Comment {
  id        Int      @id @default(autoincrement())
  content   String
  createdAt DateTime @default(now())

  blog     Blog @relation(fields: [blogId], references: [id])
  blogId   Int
  author   User @relation(fields: [authorId], references: [id])
  authorId Int
}

model Like {
  id       Int  @id @default(autoincrement())
  blog     Blog @relation(fields: [blogId], references: [id])
  blogId   Int
  author   User @relation(fields: [authorId], references: [id])
  authorId Int

  @@unique([authorId, blogId]) // one like per user per post
}
